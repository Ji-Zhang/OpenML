<!-- Schema for dataset description. Noe that it is used both for 
     uploading and downloading a dataset. Some fields, such as ID, 
     upload_date, are ignored during uploading, since these are to be 
     generated by the server. -->

<xs:schema targetNamespace="http://openml.org/openml"
    xmlns:oml="http://openml.org/openml"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    elementFormDefault="qualified">
<xs:element name="study" type="oml:study"/>

<xs:complexType name="study">
  <xs:sequence>
    <xs:element name="id" minOccurs="0" type="xs:int"/>  <!-- ID autogenerated by the server. Integer. Added by the server. Ignored when uploaded. -->
    <xs:element name="alias" minOccurs="0" type="oml:system_string32"/> <!-- requested name to obtain. URL friendly --> 
    <xs:element name="main_knowledge_type" type="oml:knowledge_type"/> <!-- whether it is a collection of runs (study) or collection of tasks (benchmark suite) --> 
    <xs:element name="description" type="oml:casual_string4096"/>
    <xs:element name="upload_date" minOccurs="0" type="xs:dateTime"/>  <!-- The date-time, generated by server, on which the dataset was uploaded. Format YYYY-mm-dd hh:MM:SS. Added by the server. Ignored when uploaded manually. -->
    <xs:element name="creator" minOccurs="0" type="xs:int"/> <!-- ID added by the server. Integer. Added by the server. Ignored when uploaded. -->
    <xs:element name="data" minOccurs="0" type="oml:data"/>
    <xs:element name="tasks" minOccurs="0" type="oml:tasks"/>
    <xs:element name="flows" minOccurs="0" type="oml:flows"/>
    <xs:element name="setups" minOccurs="0" type="oml:setups"/>
    <xs:element name="runs" minOccurs="0" type="oml:runs"/>
  </xs:sequence>
</xs:complexType>

<xs:complexType name="knowledge_type">
  <xs:choice>
    <xs:element name="task" />
    <xs:element name="run" />
  </xs:choice>
</xs:complexType>
<xs:simpleType name="system_string32"> <!-- Subset on xs:string. Highly restricted form of string. URL-friendly -->
  <xs:restriction base="xs:string">
    <xs:pattern value="([a-zA-Z0-9_\-\.])+"/>
    <xs:maxLength value="32" />
     <xs:minLength value="1" />
  </xs:restriction>
</xs:simpleType>
<xs:simpleType name="casual_string4096"> <!-- Subset on xs:string. Highly restricted form of string. URL-friendly -->
  <xs:restriction base="xs:string">
    <xs:pattern value="([a-zA-Z0-9_\-\.\(\),])+"/>
    <xs:maxLength value="4096" />
     <xs:minLength value="1" />
  </xs:restriction>
</xs:simpleType>

<xs:complexType name="data">
  <xs:sequence>
    <xs:element name="data_id" type="xs:int"/>
  </xs:sequence>
</xs:complexType>
<xs:complexType name="tasks">
  <xs:sequence>
    <xs:element name="task_id" type="xs:int"/>
  </xs:sequence>
</xs:complexType>
<xs:complexType name="flows">
  <xs:sequence>
    <xs:element name="flow_id" type="xs:int"/>
  </xs:sequence>
</xs:complexType>
<xs:complexType name="setups">
  <xs:sequence>
    <xs:element name="setup_id" type="xs:int"/>
  </xs:sequence>
</xs:complexType>
<xs:complexType name="runs">
  <xs:sequence>
    <xs:element name="run_id" type="xs:int"/>
  </xs:sequence>
</xs:complexType>
</xs:schema>
